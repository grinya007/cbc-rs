extern crate bindgen;
extern crate cc;

use std::env;
use std::path::PathBuf;
use std::process::Command;

fn main() {
    Command::new("sh").arg("prebuild.sh").status().unwrap();

    cc::Build::new()
        .cpp(true)
        .flag("-msse")
        .flag("-msse2")
        .flag("-msse3")
        .flag("-DNDEBUG")
        .flag("-DHAVE_CFLOAT")
        .flag("-DHAVE_CMATH")
        .flag("-DHAVE_DLFCN_H")
        .flag("-DHAVE_INTTYPES_H")
        .flag("-DHAVE_MEMORY_H")
        .flag("-DHAVE_STDINT_H")
        .flag("-DHAVE_STDLIB_H")
        .flag("-DHAVE_STRINGS_H")
        .flag("-DHAVE_STRING_H")
        .flag("-DHAVE_SYS_STAT_H")
        .flag("-DHAVE_SYS_TYPES_H")
        .flag("-DHAVE_UNISTD_H")
        .flag("-Icoinor/CoinUtils/CoinUtils/src")
        .file("coinor/CoinUtils/CoinUtils/src/CoinOslFactorization.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveMatrix.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinBuild.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinOslFactorization2.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveMonitor.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinDenseFactorization.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinOslFactorization3.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinDenseVector.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPackedMatrix.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveSingleton.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinError.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPackedVector.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveSubst.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinFactorization1.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPackedVectorBase.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveTighten.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinFactorization2.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinParam.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveTripleton.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinFactorization3.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinParamUtils.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveUseless.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinFactorization4.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPostsolveMatrix.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveZeros.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinFileIO.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPrePostsolveMatrix.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinRational.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinFinite.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveDoubleton.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinSearchTree.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinIndexedVector.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveDual.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinShallowPackedVector.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinLpIO.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveDupcol.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinSimpFactorization.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinMessage.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveEmpty.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinSnapshot.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinMessageHandler.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveFixed.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinStructuredModel.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinModel.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveForcing.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinWarmStartBasis.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinModelUseful.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveHelperFunctions.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinWarmStartDual.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinModelUseful2.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveImpliedFree.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinWarmStartPrimalDual.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinMpsIO.cpp")
        .file("coinor/CoinUtils/CoinUtils/src/CoinPresolveIsolated.cpp")
        .compile("CoinUtils");

    cc::Build::new()
        .cpp(true)
        .flag("-msse")
        .flag("-msse2")
        .flag("-msse3")
        .flag("-DNDEBUG")
        .flag("-DHAVE_CFLOAT")
        .flag("-DHAVE_CMATH")
        .flag("-DHAVE_DLFCN_H")
        .flag("-DHAVE_INTTYPES_H")
        .flag("-DHAVE_MEMORY_H")
        .flag("-DHAVE_STDINT_H")
        .flag("-DHAVE_STDLIB_H")
        .flag("-DHAVE_STRINGS_H")
        .flag("-DHAVE_STRING_H")
        .flag("-DHAVE_SYS_STAT_H")
        .flag("-DHAVE_SYS_TYPES_H")
        .flag("-DHAVE_UNISTD_H")
        .flag("-Icoinor/CoinUtils/CoinUtils/src")
        .flag("-Icoinor/Osi/Osi/src/Osi")
        .flag("-Icoinor/Clp/Clp/src")
        .flag("-Icoinor/Clp/Clp/src/OsiClp")
        .file("coinor/Clp/Clp/src/OsiClp/OsiClpSolverInterface.cpp")
        //.file("coinor/Clp/Clp/src/AbcDualRowDantzig.cpp")
        //.file("coinor/Clp/Clp/src/AbcDualRowPivot.cpp")
        //.file("coinor/Clp/Clp/src/AbcDualRowSteepest.cpp")
        //.file("coinor/Clp/Clp/src/AbcMatrix.cpp")
        //.file("coinor/Clp/Clp/src/AbcNonLinearCost.cpp")
        //.file("coinor/Clp/Clp/src/AbcPrimalColumnDantzig.cpp")
        //.file("coinor/Clp/Clp/src/AbcPrimalColumnPivot.cpp")
        //.file("coinor/Clp/Clp/src/AbcPrimalColumnSteepest.cpp")
        //.file("coinor/Clp/Clp/src/AbcSimplex.cpp")
        //.file("coinor/Clp/Clp/src/AbcSimplexDual.cpp")
        //.file("coinor/Clp/Clp/src/AbcSimplexFactorization.cpp")
        //.file("coinor/Clp/Clp/src/AbcSimplexParallel.cpp")
        //.file("coinor/Clp/Clp/src/AbcSimplexPrimal.cpp")
        //.file("coinor/Clp/Clp/src/AbcWarmStart.cpp")
        //.file("coinor/Clp/Clp/src/CbcOrClpParam.cpp")
        .file("coinor/Clp/Clp/src/ClpCholeskyBase.cpp")
        .file("coinor/Clp/Clp/src/ClpCholeskyDense.cpp")
        //.file("coinor/Clp/Clp/src/ClpCholeskyMumps.cpp")
        //.file("coinor/Clp/Clp/src/ClpCholeskyPardiso.cpp")
        //.file("coinor/Clp/Clp/src/ClpCholeskyTaucs.cpp")
        //.file("coinor/Clp/Clp/src/ClpCholeskyUfl.cpp")
        //.file("coinor/Clp/Clp/src/ClpCholeskyWssmp.cpp")
        //.file("coinor/Clp/Clp/src/ClpCholeskyWssmpKKT.cpp")
        .file("coinor/Clp/Clp/src/ClpConstraint.cpp")
        .file("coinor/Clp/Clp/src/ClpConstraintLinear.cpp")
        .file("coinor/Clp/Clp/src/ClpConstraintQuadratic.cpp")
        .file("coinor/Clp/Clp/src/ClpDualRowDantzig.cpp")
        .file("coinor/Clp/Clp/src/ClpDualRowPivot.cpp")
        .file("coinor/Clp/Clp/src/ClpDualRowSteepest.cpp")
        .file("coinor/Clp/Clp/src/ClpDummyMatrix.cpp")
        .file("coinor/Clp/Clp/src/ClpDynamicExampleMatrix.cpp")
        .file("coinor/Clp/Clp/src/ClpDynamicMatrix.cpp")
        .file("coinor/Clp/Clp/src/ClpEventHandler.cpp")
        .file("coinor/Clp/Clp/src/ClpFactorization.cpp")
        .file("coinor/Clp/Clp/src/ClpGubDynamicMatrix.cpp")
        .file("coinor/Clp/Clp/src/ClpGubMatrix.cpp")
        .file("coinor/Clp/Clp/src/ClpHelperFunctions.cpp")
        .file("coinor/Clp/Clp/src/ClpInterior.cpp")
        .file("coinor/Clp/Clp/src/ClpLinearObjective.cpp")
        .file("coinor/Clp/Clp/src/ClpLsqr.cpp")
        //.file("coinor/Clp/Clp/src/ClpMain.cpp")
        .file("coinor/Clp/Clp/src/ClpMatrixBase.cpp")
        .file("coinor/Clp/Clp/src/ClpMessage.cpp")
        .file("coinor/Clp/Clp/src/ClpModel.cpp")
        .file("coinor/Clp/Clp/src/ClpNetworkBasis.cpp")
        .file("coinor/Clp/Clp/src/ClpNetworkMatrix.cpp")
        .file("coinor/Clp/Clp/src/ClpNode.cpp")
        .file("coinor/Clp/Clp/src/ClpNonLinearCost.cpp")
        .file("coinor/Clp/Clp/src/ClpObjective.cpp")
        .file("coinor/Clp/Clp/src/ClpPEDualRowDantzig.cpp")
        .file("coinor/Clp/Clp/src/ClpPEDualRowSteepest.cpp")
        .file("coinor/Clp/Clp/src/ClpPEPrimalColumnDantzig.cpp")
        .file("coinor/Clp/Clp/src/ClpPEPrimalColumnSteepest.cpp")
        .file("coinor/Clp/Clp/src/ClpPESimplex.cpp")
        .file("coinor/Clp/Clp/src/ClpPackedMatrix.cpp")
        .file("coinor/Clp/Clp/src/ClpPdco.cpp")
        .file("coinor/Clp/Clp/src/ClpPdcoBase.cpp")
        .file("coinor/Clp/Clp/src/ClpPlusMinusOneMatrix.cpp")
        .file("coinor/Clp/Clp/src/ClpPredictorCorrector.cpp")
        .file("coinor/Clp/Clp/src/ClpPresolve.cpp")
        .file("coinor/Clp/Clp/src/ClpPrimalColumnDantzig.cpp")
        .file("coinor/Clp/Clp/src/ClpPrimalColumnPivot.cpp")
        .file("coinor/Clp/Clp/src/ClpPrimalColumnSteepest.cpp")
        .file("coinor/Clp/Clp/src/ClpQuadraticObjective.cpp")
        .file("coinor/Clp/Clp/src/ClpSimplex.cpp")
        .file("coinor/Clp/Clp/src/ClpSimplexDual.cpp")
        .file("coinor/Clp/Clp/src/ClpSimplexNonlinear.cpp")
        .file("coinor/Clp/Clp/src/ClpSimplexOther.cpp")
        .file("coinor/Clp/Clp/src/ClpSimplexPrimal.cpp")
        .file("coinor/Clp/Clp/src/ClpSolve.cpp")
        //.file("coinor/Clp/Clp/src/ClpSolver.cpp")
        //.file("coinor/Clp/Clp/src/Clp_C_Interface.cpp")
        //.file("coinor/Clp/Clp/src/Clp_ampl.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcBaseFactorization1.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcBaseFactorization2.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcBaseFactorization3.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcBaseFactorization4.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcBaseFactorization5.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcDenseFactorization.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcFactorization1.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcFactorization2.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcFactorization3.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcFactorization4.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcFactorization5.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcHelperFunctions.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcOrderedFactorization1.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcOrderedFactorization2.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcOrderedFactorization3.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcOrderedFactorization4.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcOrderedFactorization5.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcSmallFactorization1.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcSmallFactorization2.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcSmallFactorization3.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcSmallFactorization4.cpp")
        //.file("coinor/Clp/Clp/src/CoinAbcSmallFactorization5.cpp")
        .file("coinor/Clp/Clp/src/IdiSolve.cpp")
        .file("coinor/Clp/Clp/src/Idiot.cpp")
        //.file("coinor/Clp/Clp/src/MyEventHandler.cpp")
        //.file("coinor/Clp/Clp/src/MyMessageHandler.cpp")
        //.file("coinor/Clp/Clp/src/unitTest.cpp")
        .compile("Clp");

    cc::Build::new()
        .cpp(true)
        .flag("-msse")
        .flag("-msse2")
        .flag("-msse3")
        .flag("-DNDEBUG")
        .flag("-DHAVE_CFLOAT")
        .flag("-DHAVE_CMATH")
        .flag("-DHAVE_DLFCN_H")
        .flag("-DHAVE_INTTYPES_H")
        .flag("-DHAVE_MEMORY_H")
        .flag("-DHAVE_STDINT_H")
        .flag("-DHAVE_STDLIB_H")
        .flag("-DHAVE_STRINGS_H")
        .flag("-DHAVE_STRING_H")
        .flag("-DHAVE_SYS_STAT_H")
        .flag("-DHAVE_SYS_TYPES_H")
        .flag("-DHAVE_UNISTD_H")
        .flag("-Icoinor/CoinUtils/CoinUtils/src")
        .flag("-Icoinor/Osi/Osi/src/Osi")
        .flag("-Icoinor/Clp/Clp/src")
        .flag("-Icoinor/Clp/Clp/src/OsiClp")
        .flag("-Icoinor/Cgl/Cgl/src")
        .flag("-Icoinor/Cgl/Cgl/src/CglAllDifferent")
        .flag("-Icoinor/Cgl/Cgl/src/CglClique")
        .flag("-Icoinor/Cgl/Cgl/src/CglDuplicateRow")
        .flag("-Icoinor/Cgl/Cgl/src/CglFlowCover")
        .flag("-Icoinor/Cgl/Cgl/src/CglGMI")
        .flag("-Icoinor/Cgl/Cgl/src/CglGomory")
        .flag("-Icoinor/Cgl/Cgl/src/CglKnapsackCover")
        .flag("-Icoinor/Cgl/Cgl/src/CglLandP")
        .flag("-Icoinor/Cgl/Cgl/src/CglLiftAndProject")
        .flag("-Icoinor/Cgl/Cgl/src/CglMixedIntegerRounding")
        .flag("-Icoinor/Cgl/Cgl/src/CglMixedIntegerRounding2")
        .flag("-Icoinor/Cgl/Cgl/src/CglOddHole")
        .flag("-Icoinor/Cgl/Cgl/src/CglPreProcess")
        .flag("-Icoinor/Cgl/Cgl/src/CglProbing")
        .flag("-Icoinor/Cgl/Cgl/src/CglRedSplit")
        .flag("-Icoinor/Cgl/Cgl/src/CglRedSplit2")
        .flag("-Icoinor/Cgl/Cgl/src/CglResidualCapacity")
        .flag("-Icoinor/Cgl/Cgl/src/CglSimpleRounding")
        .flag("-Icoinor/Cgl/Cgl/src/CglTwomir")
        .flag("-Icoinor/Cgl/Cgl/src/CglZeroHalf")
        .file("coinor/Cgl/Cgl/src/CglAllDifferent/CglAllDifferent.cpp")
        .file("coinor/Cgl/Cgl/src/CglClique/CglClique.cpp")
        .file("coinor/Cgl/Cgl/src/CglClique/CglCliqueHelper.cpp")
        //.file("coinor/Cgl/Cgl/src/CglClique/CglCliqueTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglCutGenerator.cpp")
        .file("coinor/Cgl/Cgl/src/CglDuplicateRow/CglDuplicateRow.cpp")
        .file("coinor/Cgl/Cgl/src/CglFlowCover/CglFlowCover.cpp")
        //.file("coinor/Cgl/Cgl/src/CglFlowCover/CglFlowCoverTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglGMI/CglGMI.cpp")
        .file("coinor/Cgl/Cgl/src/CglGMI/CglGMIParam.cpp")
        .file("coinor/Cgl/Cgl/src/CglGomory/CglGomory.cpp")
        //.file("coinor/Cgl/Cgl/src/CglGomory/CglGomoryTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglKnapsackCover/CglKnapsackCover.cpp")
        //.file("coinor/Cgl/Cgl/src/CglKnapsackCover/CglKnapsackCoverTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglLandP/CglLandP.cpp")
        .file("coinor/Cgl/Cgl/src/CglLandP/CglLandPMessages.cpp")
        .file("coinor/Cgl/Cgl/src/CglLandP/CglLandPSimplex.cpp")
        .file("coinor/Cgl/Cgl/src/CglLandP/CglLandPTabRow.cpp")
        //.file("coinor/Cgl/Cgl/src/CglLandP/CglLandPTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglLandP/CglLandPUtils.cpp")
        .file("coinor/Cgl/Cgl/src/CglLandP/CglLandPValidator.cpp")
        .file("coinor/Cgl/Cgl/src/CglLiftAndProject/CglLiftAndProject.cpp")
        .file("coinor/Cgl/Cgl/src/CglMessage.cpp")
        .file("coinor/Cgl/Cgl/src/CglMixedIntegerRounding/CglMixedIntegerRounding.cpp")
        //.file("coinor/Cgl/Cgl/src/CglMixedIntegerRounding/CglMixedIntegerRoundingTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglMixedIntegerRounding2/CglMixedIntegerRounding2.cpp")
        //.file("coinor/Cgl/Cgl/src/CglMixedIntegerRounding2/CglMixedIntegerRounding2Test.cpp")
        .file("coinor/Cgl/Cgl/src/CglOddHole/CglOddHole.cpp")
        //.file("coinor/Cgl/Cgl/src/CglOddHole/CglOddHoleTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglParam.cpp")
        .file("coinor/Cgl/Cgl/src/CglPreProcess/CglPreProcess.cpp")
        .file("coinor/Cgl/Cgl/src/CglProbing/CglProbing.cpp")
        //.file("coinor/Cgl/Cgl/src/CglProbing/CglProbingTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglRedSplit/CglRedSplit.cpp")
        .file("coinor/Cgl/Cgl/src/CglRedSplit/CglRedSplitParam.cpp")
        //.file("coinor/Cgl/Cgl/src/CglRedSplit/CglRedSplitTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglRedSplit2/CglRedSplit2.cpp")
        .file("coinor/Cgl/Cgl/src/CglRedSplit2/CglRedSplit2Param.cpp")
        //.file("coinor/Cgl/Cgl/src/CglRedSplit2/CglRedSplit2Test.cpp")
        .file("coinor/Cgl/Cgl/src/CglResidualCapacity/CglResidualCapacity.cpp")
        //.file("coinor/Cgl/Cgl/src/CglResidualCapacity/CglResidualCapacityTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglSimpleRounding/CglSimpleRounding.cpp")
        //.file("coinor/Cgl/Cgl/src/CglSimpleRounding/CglSimpleRoundingTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglStored.cpp")
        .file("coinor/Cgl/Cgl/src/CglTreeInfo.cpp")
        .file("coinor/Cgl/Cgl/src/CglTwomir/CglTwomir.cpp")
        //.file("coinor/Cgl/Cgl/src/CglTwomir/CglTwomirTest.cpp")
        .file("coinor/Cgl/Cgl/src/CglZeroHalf/Cgl012cut.cpp")
        .file("coinor/Cgl/Cgl/src/CglZeroHalf/CglZeroHalf.cpp")
        //.file("coinor/Cgl/Cgl/src/CglZeroHalf/CglZeroHalfTest.cpp")
        .compile("Cgl");

    cc::Build::new()
        .cpp(true)
        .flag("-msse")
        .flag("-msse2")
        .flag("-msse3")
        .flag("-DNDEBUG")
        .flag("-DHAVE_CFLOAT")
        .flag("-DHAVE_CMATH")
        .flag("-DHAVE_DLFCN_H")
        .flag("-DHAVE_INTTYPES_H")
        .flag("-DHAVE_MEMORY_H")
        .flag("-DHAVE_STDINT_H")
        .flag("-DHAVE_STDLIB_H")
        .flag("-DHAVE_STRINGS_H")
        .flag("-DHAVE_STRING_H")
        .flag("-DHAVE_SYS_STAT_H")
        .flag("-DHAVE_SYS_TYPES_H")
        .flag("-DHAVE_UNISTD_H")
        .flag("-Icoinor/CoinUtils/CoinUtils/src")
        .flag("-Icoinor/Osi/Osi/src/Osi")
        .file("coinor/Osi/Osi/src/Osi/OsiAuxInfo.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiBranchingObject.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiChooseVariable.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiColCut.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiCut.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiCuts.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiNames.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiPresolve.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiRowCut.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiRowCutDebugger.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiSolverBranch.cpp")
        .file("coinor/Osi/Osi/src/Osi/OsiSolverInterface.cpp")
        .compile("Osi");

    cc::Build::new()
        .cpp(true)
        .flag("-msse")
        .flag("-msse2")
        .flag("-msse3")
        .flag("-DNDEBUG")
        .flag("-DCOIN_NO_CLP_MESSAGE")
        .flag("-DCBC_BUILD")
        .flag("-DCBC_THREAD_SAFE")
        .flag("-DHAVE_CFLOAT")
        .flag("-DHAVE_CMATH")
        .flag("-DHAVE_DLFCN_H")
        .flag("-DHAVE_INTTYPES_H")
        .flag("-DHAVE_MEMORY_H")
        .flag("-DHAVE_STDINT_H")
        .flag("-DHAVE_STDLIB_H")
        .flag("-DHAVE_STRINGS_H")
        .flag("-DHAVE_STRING_H")
        .flag("-DHAVE_SYS_STAT_H")
        .flag("-DHAVE_SYS_TYPES_H")
        .flag("-DHAVE_UNISTD_H")
        .flag("-Icoinor/CoinUtils/CoinUtils/src")
        .flag("-Icoinor/Osi/Osi/src/Osi")
        .flag("-Icoinor/Clp/Clp/src")
        .flag("-Icoinor/Clp/Clp/src/OsiClp")
        .flag("-Icoinor/Cgl/Cgl/src")
        .flag("-Icoinor/Cgl/Cgl/src/CglAllDifferent")
        .flag("-Icoinor/Cgl/Cgl/src/CglClique")
        .flag("-Icoinor/Cgl/Cgl/src/CglDuplicateRow")
        .flag("-Icoinor/Cgl/Cgl/src/CglFlowCover")
        .flag("-Icoinor/Cgl/Cgl/src/CglGMI")
        .flag("-Icoinor/Cgl/Cgl/src/CglGomory")
        .flag("-Icoinor/Cgl/Cgl/src/CglKnapsackCover")
        .flag("-Icoinor/Cgl/Cgl/src/CglLandP")
        .flag("-Icoinor/Cgl/Cgl/src/CglLiftAndProject")
        .flag("-Icoinor/Cgl/Cgl/src/CglMixedIntegerRounding")
        .flag("-Icoinor/Cgl/Cgl/src/CglMixedIntegerRounding2")
        .flag("-Icoinor/Cgl/Cgl/src/CglOddHole")
        .flag("-Icoinor/Cgl/Cgl/src/CglPreProcess")
        .flag("-Icoinor/Cgl/Cgl/src/CglProbing")
        .flag("-Icoinor/Cgl/Cgl/src/CglRedSplit")
        .flag("-Icoinor/Cgl/Cgl/src/CglRedSplit2")
        .flag("-Icoinor/Cgl/Cgl/src/CglResidualCapacity")
        .flag("-Icoinor/Cgl/Cgl/src/CglSimpleRounding")
        .flag("-Icoinor/Cgl/Cgl/src/CglTwomir")
        .flag("-Icoinor/Cgl/Cgl/src/CglZeroHalf")
        .flag("-Icoinor/Cbc/Cbc/src")
        .file("coinor/Cbc/Cbc/src/CbcBranchAllDifferent.cpp")
        .file("coinor/Cbc/Cbc/src/CbcBranchBase.cpp")
        .file("coinor/Cbc/Cbc/src/CbcBranchCut.cpp")
        .file("coinor/Cbc/Cbc/src/CbcBranchDecision.cpp")
        .file("coinor/Cbc/Cbc/src/CbcBranchDefaultDecision.cpp")
        .file("coinor/Cbc/Cbc/src/CbcBranchDynamic.cpp")
        .file("coinor/Cbc/Cbc/src/CbcBranchLotsize.cpp")
        .file("coinor/Cbc/Cbc/src/CbcBranchToFixLots.cpp")
        .file("coinor/Cbc/Cbc/src/CbcBranchingObject.cpp")
        .file("coinor/Cbc/Cbc/src/CbcCbcParam.cpp")
        .file("coinor/Cbc/Cbc/src/CbcClique.cpp")
        .file("coinor/Cbc/Cbc/src/CbcCompareDefault.cpp")
        .file("coinor/Cbc/Cbc/src/CbcCompareDepth.cpp")
        .file("coinor/Cbc/Cbc/src/CbcCompareEstimate.cpp")
        .file("coinor/Cbc/Cbc/src/CbcCompareObjective.cpp")
        .file("coinor/Cbc/Cbc/src/CbcConsequence.cpp")
        .file("coinor/Cbc/Cbc/src/CbcCountRowCut.cpp")
        .file("coinor/Cbc/Cbc/src/CbcCutGenerator.cpp")
        .file("coinor/Cbc/Cbc/src/CbcCutModifier.cpp")
        .file("coinor/Cbc/Cbc/src/CbcCutSubsetModifier.cpp")
        .file("coinor/Cbc/Cbc/src/CbcDummyBranchingObject.cpp")
        .file("coinor/Cbc/Cbc/src/CbcEventHandler.cpp")
        .file("coinor/Cbc/Cbc/src/CbcFathom.cpp")
        .file("coinor/Cbc/Cbc/src/CbcFathomDynamicProgramming.cpp")
        .file("coinor/Cbc/Cbc/src/CbcFixVariable.cpp")
        .file("coinor/Cbc/Cbc/src/CbcFollowOn.cpp")
        .file("coinor/Cbc/Cbc/src/CbcFullNodeInfo.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenBaB.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenCbcParam.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenCbcParamUtils.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenCtlBlk.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenMessages.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenOsiParam.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenOsiParamUtils.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenParam.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenParamUtils.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenSolution.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGenSolvers.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGeneral.cpp")
        .file("coinor/Cbc/Cbc/src/CbcGeneralDepth.cpp")
        //.file("coinor/Cbc/Cbc/src/CbcGeneric.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristic.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicDINS.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicDW.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicDive.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicDiveCoefficient.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicDiveFractional.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicDiveGuided.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicDiveLineSearch.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicDivePseudoCost.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicDiveVectorLength.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicFPump.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicGreedy.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicLocal.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicPivotAndFix.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicRENS.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicRINS.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicRandRound.cpp")
        .file("coinor/Cbc/Cbc/src/CbcHeuristicVND.cpp")
        .file("coinor/Cbc/Cbc/src/CbcLinked.cpp")
        .file("coinor/Cbc/Cbc/src/CbcLinkedUtils.cpp")
        .file("coinor/Cbc/Cbc/src/CbcMessage.cpp")
        .file("coinor/Cbc/Cbc/src/CbcMipStartIO.cpp")
        .file("coinor/Cbc/Cbc/src/CbcModel.cpp")
        .file("coinor/Cbc/Cbc/src/CbcNWay.cpp")
        .file("coinor/Cbc/Cbc/src/CbcNode.cpp")
        .file("coinor/Cbc/Cbc/src/CbcNodeInfo.cpp")
        .file("coinor/Cbc/Cbc/src/CbcObject.cpp")
        .file("coinor/Cbc/Cbc/src/CbcObjectUpdateData.cpp")
        .file("coinor/Cbc/Cbc/src/CbcParam.cpp")
        .file("coinor/Cbc/Cbc/src/CbcPartialNodeInfo.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSOS.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSimpleInteger.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSimpleIntegerDynamicPseudoCost.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSimpleIntegerPseudoCost.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSolver.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSolverAnalyze.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSolverExpandKnapsack.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSolverHeuristics.cpp")
        .file("coinor/Cbc/Cbc/src/CbcStatistics.cpp")
        .file("coinor/Cbc/Cbc/src/CbcStrategy.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSubProblem.cpp")
        .file("coinor/Cbc/Cbc/src/CbcSymmetry.cpp")
        .file("coinor/Cbc/Cbc/src/CbcThread.cpp")
        .file("coinor/Cbc/Cbc/src/CbcTree.cpp")
        .file("coinor/Cbc/Cbc/src/CbcTreeLocal.cpp")
        .file("coinor/Cbc/Cbc/src/Cbc_C_Interface.cpp")
        .file("coinor/Cbc/Cbc/src/Cbc_ampl.cpp")
        //.file("coinor/Cbc/Cbc/src/CoinSolve.cpp")
        .file("coinor/Cbc/Cbc/src/unitTest.cpp")
        .file("coinor/Cbc/Cbc/src/unitTestClp.cpp")
        .compile("Cbc");

    let bindings = bindgen::Builder::default()
        .clang_arg("-Icoinor/CoinUtils/CoinUtils/src")
        .clang_arg("-Icoinor/Clp/Clp/src")
        .clang_arg("-Icoinor/Cbc/Cbc/src")
        .header("wrapper.h")
        .trust_clang_mangling(false)
        .generate()
        .expect("Unable to generate bindings");

    let out_path = PathBuf::from(env::var("OUT_DIR").unwrap());
    bindings
        .write_to_file(out_path.join("bindings.rs"))
        .expect("Couldn't write bindings!");

    Command::new("sh").arg("postbuild.sh").status().unwrap();

    println!("cargo:rerun-if-changed=build.rs");
}
